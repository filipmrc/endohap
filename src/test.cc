#include<endohap/Endowrist.h>
#include<iostream>
int main(int argc, char** argv)
{
	MatrixXd A_y(6,6), B_y(6,1), C_y(2,6), A_p(4,4), B_p(4,1), C_p(2,4),
			 x_y(6,1), x_p(4,1), y_y(2,1), y_p(2,1), Q_y(1,1), Q_p(1,1), R_y(2,2), R_p(2,2);

	A_y <<     0.5509,   -0.0109,    0.0007,   -0.0047,   -0.0010,    0.0016,
			   10.4518,    0.5990,   -0.1192,    0.1213,   -0.0200,   -0.0280,
			   10.0873,   -0.4123,    0.8314,    0.0783,    0.1449,    0.0884,
			  -16.8556,    0.6775,    0.3087,    0.6162,   -0.0598,    0.2676,
			    4.5207,   -0.1856,   -0.0992,    0.2189,    0.0859,   -0.5281,
			   -4.5210,    0.1822,    0.0715,   -0.2109,    0.1712,   -0.3489;

	B_y <<    -0.1910,   16.4717,   29.1913,    4.2352,  -39.4381, -169.9798;

	C_y <<     0.0900,   -0.0624,    0.0619,   -0.0352,   -0.0026,   -0.0016,
		       0.0009,    0.0008,   -0.0005,    0.0001,    0.0000,   -0.0000;

	Q_y << 0.0005*0.0005;

	R_y << 0.00001*0.00001, 0 ,0, (unsigned int)100000*100000;

	x_y << 0, 0, 0, 0, 0, 0;

	Kalman f1;
	f1.initializeFilter(A_y,B_y,C_y,Q_y,R_y,x_y);

	MatrixXd yv(2,1), u(1,1);

	u << 0.1553;
	yv << 0 , -0.0000;

	std::cout << f1.estimateOutput(yv,u);
}
